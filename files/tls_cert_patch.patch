commit 60e74d42fbda72222402d3f2f9a04a3eb0d1e2ca
Author: Andrey Galkin <andrey@futoin.org>
Date:   Thu May 3 00:14:18 2018 +0300

    NEW: TLS client and CA certificate support

    - Added tls_ca_file, tls_cert_file and tls_key_file options for UrlService

diff --git a/python.d/python_modules/bases/FrameworkServices/UrlService.py b/python.d/python_modules/bases/FrameworkServices/UrlService.py
index 3f4fcf6f..74262df1 100644
--- a/python.d/python_modules/bases/FrameworkServices/UrlService.py
+++ b/python.d/python_modules/bases/FrameworkServices/UrlService.py
@@ -25,6 +25,9 @@ class UrlService(SimpleService):
         self.header = self.configuration.get('header')
         self.request_timeout = self.configuration.get('timeout', 1)
         self.tls_verify = self.configuration.get('tls_verify')
+        self.tls_ca_file = self.configuration.get('tls_ca_file')
+        self.tls_key_file = self.configuration.get('tls_key_file')
+        self.tls_cert_file = self.configuration.get('tls_cert_file')
         self._manager = None

     def __make_headers(self, **header_kw):
@@ -61,10 +64,22 @@ class UrlService(SimpleService):
         else:
             manager = urllib3.PoolManager
             params = dict(headers=header)
+        tls_cert_file = self.tls_cert_file
+        if tls_cert_file:
+            params['cert_file'] = tls_cert_file
+            # NOTE: key_file is useless without cert_file, but
+            #       cert_file may include the key as well.
+            tls_key_file = self.tls_key_file
+            if tls_key_file:
+                params['key_file'] = tls_key_file
+        tls_ca_file = self.tls_ca_file
+        if tls_ca_file:
+            params['ca_certs'] = tls_ca_file
         try:
             url = header_kw.get('url') or self.url
-            if url.startswith('https') and not self.tls_verify:
-                return manager(assert_hostname=False, cert_reqs='CERT_NONE', ca_certs=None, **params)
+            if url.startswith('https') and not self.tls_verify and not tls_ca_file:
+                params['ca_certs'] = None
+                return manager(assert_hostname=False, cert_reqs='CERT_NONE', **params)
             return manager(**params)
         except (urllib3.exceptions.ProxySchemeUnknown, TypeError) as error:
             self.error('build_manager() error:', str(error))
